name: Deploy Node.js API
run-name: ${{ github.actor }} estÃ  desplegant l'API ðŸš€
on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './back/apiNode/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./back/apiNode
        run: npm ci
      
      - name: Upload API files
        uses: actions/upload-artifact@v4
        with:
          name: node-api
          path: |
            ./back/apiNode/src/**
            ./back/apiNode/package.json
            ./back/apiNode/package-lock.json

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download API files
        uses: actions/download-artifact@v4
        with:
          name: node-api
          path: temp-deploy

      - name: Create .env
        run: |
          touch temp-deploy/.env
          echo "MOODLE_API_TOKEN=${{ secrets.MOODLE_API_TOKEN }}" > temp-deploy/.env
          echo "MOODLE_API_URL=${{ secrets.MOODLE_API_URL }}" >> temp-deploy/.env

      - name: Deploy via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "temp-deploy/*"
          target: "/home/a23brijaemed/web/profenet.daw.inspedralbes.cat/private"
          strip_components: 1
          debug: true


      - name: Execute remote commands
        uses: appleboy/ssh-action@master
        env:
          NODE_PORT: 22223
        with:
          host: daw.inspedralbes.cat
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/a23brijaemed/web/profenet.daw.inspedralbes.cat/private
            # Kill existing screen session if it exists
            screen -X -S nodejs quit || true
            # Start a new screen session
            screen -dmS nodejs bash -c 'npm install && PORT=${{ env.NODE_PORT }} npm run start'
            echo "Next.js server restarted in screen session 'nextjs' on port ${{ env.NODE_PORT }}"
